{"version":3,"sources":["lib/commerce.js","components/Products/Product/styles.js","components/Products/Product/Product.jsx","components/Products/styles.js","components/Products/Products.jsx","assets/shopLogo.png","components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/Cart/styles.js","components/Cart/CartItem/styles.js","components/Cart/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/CheckoutForm/Checkout/styles.js","components/CheckoutForm/FormInput.jsx","components/CheckoutForm/AddressForm.jsx","components/CheckoutForm/Review.jsx","components/CheckoutForm/PaymentForm.jsx","components/CheckoutForm/Checkout/Checkout.jsx","App.js","index.js"],"names":["commerce","Commerce","process","makeStyles","root","maxWidth","media","height","paddingTop","cardActions","display","justifyContent","cardContent","Product","str","product","onAddToCart","classes","useStyles","Card","className","CardMedia","image","url","title","name","CardContent","Typography","variant","gutterBottom","color","description","toString","replace","price","formatted_with_symbol","CardActions","disableSpacing","IconButton","onClick","id","AddShoppingCart","theme","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","Products","products","Grid","container","map","item","xs","sm","md","lg","appBar","boxShadow","borderBottom","breakpoints","up","width","marginLeft","alignItems","textDecoration","marginRight","menuButton","grow","search","position","borderRadius","shape","alpha","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","Navbar","totalItems","location","useLocation","AppBar","Toolbar","component","Link","to","src","logo","alt","img","pathname","button","Badge","badgeContent","ShoppingCart","marginTop","marginBottom","textAlign","emptyButton","minWidth","down","checkoutButton","link","cartDetails","margin","cartActions","buttons","CartItem","onUpdateCartQty","onRemoveFromCart","line_total","Button","type","size","quantity","Cart","cart","handleUpdateCartQty","handleRemoveFromCart","handleEmptyCart","EmptyCart","FilledCart","line_items","subtotal","Container","length","layout","paper","stepper","divider","spinner","FormInput","label","error","rules","useFormContext","control","errors","formState","defaultValue","fullWidth","render","field","TextField","as","message","style","AddressForm","checkoutToken","next","useState","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","countries","Object","entries","subdivisions","options","sO","fetchShippingCountries","checkoutTokenId","a","services","localeListShippingCountries","keys","fetchShippingSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","country","region","checkout","getShippingOptions","useEffect","onSubmit","handleSubmit","data","required","maxLength","firstName","lastName","address1","pattern","value","email","city","zip","InputLabel","Select","onChange","e","target","MenuItem","subdivision","option","Review","List","disablePadding","live","ListItem","ListItemText","primary","secondary","fontWeight","stripePromise","loadStripe","PaymentForm","shippingData","backStep","onCaptureCheckout","nextStep","timeout","onHandleEmptyCart","event","elements","stripe","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","console","log","orderData","line_item","customer","firstname","lastname","shipping","street","town_city","county_state","potal_zip_code","fulfillment","shipping_method","payment","gateway","payment_method_id","Divider","disabled","steps","Checkout","order","activeStep","setActiveStep","setCheckoutToken","setShippingData","isFinished","setIsFinished","navigate","useNavigate","generateToken","token","prevActiveStep","setTimeout","Comfirmation","cutomer","customer_reference","CircularProgress","Form","CssBaseline","Paper","align","Stepper","step","Step","StepLabel","App","setProcuts","setCart","setOrder","errorMessage","setErrorMessage","fetchProducts","list","fetchCart","retrieve","handleAddToCart","productId","add","update","remove","empty","refreshCart","refresh","newCart","handleCaptureCheckout","newOrder","capture","incomingOrder","total_items","path","element","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c4ccaab.chunk.js","sourcesContent":["import Commerce from '@chec/commerce.js';\n\nexport const commerce = new Commerce(process.env.REACT_APP_CHEC_PUBLIC_KEY, true);","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    maxWidth: '100%',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));","import React from 'react';\nimport {Card, CardMedia, CardContent, CardActions, Typography, IconButton} from '@material-ui/core';\nimport {AddShoppingCart, CallMissedSharp} from '@material-ui/icons';\n\nimport useStyles from './styles';\n\nfunction removeTags(str) {\n    if ((str===null) || (str===''))\n        return false;\n    else\n        str = str.toString();\n\n    return str.replace( /(<([^>]+)>)/ig, '');\n}\n\nconst Product = ({ product, onAddToCart }) => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardMedia className={classes.media} image={product.image.url} title={product.name}></CardMedia>\n                <CardContent>\n                    <Typography variant='subtitle1' gutterBottom>\n                        {product.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color='textSecondary' gutterBottom>{removeTags(product.description)}</Typography>\n                    <div className={classes.cardContent}>\n                        <Typography variant='h5'>\n                            {product.price.formatted_with_symbol}\n                        </Typography>\n                        <CardActions disableSpacing className={classes.cardActions}>\n                            <IconButton aria-label='Add to Cart' onClick={() => onAddToCart(product.id, 1)}>\n                                <AddShoppingCart />\n                            </IconButton>\n                        </CardActions>\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  root: {\n    flexGrow: 1,\n  },\n}));","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Product from './Product/Product';\nimport useStyles from './styles';\n\nconst Products = ({ products, onAddToCart }) => {\n    const classes = useStyles();\n\n    return(\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n            <Grid container justifyContent= \"center\" spacing={4}>\n                {\n                    products.map((product) => (\n                        <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\n                            <Product product={product} onAddToCart={onAddToCart} />\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </main>\n    );\n}\n\nexport default Products;","export default __webpack_public_path__ + \"static/media/shopLogo.738ae8ae.png\";","import { makeStyles, alpha } from '@material-ui/core/styles';\nimport { ArrowRight } from '@material-ui/icons';\n\nconst drawerWidth = 0;\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    boxShadow: 'none',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  title: {\n    flexGrow: 1,\n    alignItems: 'center',\n    display: 'flex',\n    textDecoration: 'none',\n  },\n  image: {\n    marginRight: '10px',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Typography } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../../assets/shopLogo.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return (\n        <div>\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\n                <Toolbar>\n                    <Typography  component={Link} to='/' variant='h6' className={classes.title} color='inherit'>\n                        <img src={logo} alt=\"React E-commerce Shop\" height=\"25px\" className={classes.img} />\n                        React E-commerce Shop\n                    </Typography>\n                    <div className={classes.grow}/>\n                    { location.pathname === '/' && (\n                    <div className={classes.button}>\n                        <IconButton component={Link} to='/cart' aria-label='Show cart items' color='inherit'>\n                            <Badge badgeContent={totalItems} color='secondary'>\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </div>)}\n                </Toolbar>\n            </AppBar>\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  title: {\n    marginTop: '5%',\n    marginBottom: '5%',\n    textAlign: 'center',\n  },\n  emptyButton: {\n    minWidth: '150px',\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: '5px',\n    },\n    [theme.breakpoints.up('xs')]: {\n      marginRight: '20px',\n    },\n  },\n  checkoutButton: {\n    minWidth: '150px',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  cartDetails: {\n    display: 'flex',\n    marginTop: '10%',\n    marginBottom: '5%',\n    width: '100%',\n    justifyContent: 'space-between',\n    textAlign: 'right'\n  },\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  media: {\n    height: 160,\n    width: '33%',\n    margin: 'auto'\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cartActions: {\n    justifyContent: 'space-between',\n  },\n  buttons: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));","import React from 'react';\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardMedia image={item.image.url} alt={item.name} className={classes.media}/>\n            <CardContent className={classes.cardContent}>\n                <Typography variant='h6'>{item.name}</Typography>\n                <Typography variant='h6'>{item.line_total.formatted_with_symbol}</Typography>\n            </CardContent>\n            <CardActions className={classes.cartActions}>\n                <div className={classes.buttons}>\n                    <Button type='button' size='small' onClick={() => onUpdateCartQty(item.id, item.quantity - 1)}>-</Button>\n                    <Typography>{item.quantity}</Typography>\n                    <Button type='button' size='small' onClick={() => onUpdateCartQty(item.id, item.quantity + 1)}>+</Button>\n                </div>\n                <Button variant='contained' type='button' color='secondary' onClick={() => onRemoveFromCart(item.id)}>Remove</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport { Container, Typography, Button, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\n\nimport useStyles from './styles';\nimport CartItem from './CartItem/CartItem';\n\nconst Cart = ({ cart, handleUpdateCartQty, handleRemoveFromCart, handleEmptyCart }) => {\n    const classes = useStyles();\n\n    const EmptyCart = () => (\n        <Typography variant='subtitle1'>You have no items in your shopping cart, \n            <Link to='/' className={classes.link}>start adding some</Link>!\n        </Typography>\n    );\n\n    const FilledCart = () => (\n        <>\n            <Grid container spacing={3}>\n                {cart.line_items.map((item) => (\n                    <Grid item xs={12} sm={4} key={item.id}>\n                        <CartItem item={item} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart}/>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.cartDetails}>\n                    <Typography variant='h4'>\n                        Subtotal: {cart.subtotal.formatted_with_symbol}\n                    </Typography>\n                    <div>\n                        <Button className={classes.emptyButton} size='large' type='button' variant='contained' color='secondary' onClick={handleEmptyCart}>Empty Cart</Button>\n                        <Button component={Link} to='/checkout' className={classes.checkoutButton} size='large' type='button' variant='contained' color='primary'>Checkout</Button>\n                    </div>\n            </div>\n        </>\n    )\n\n    if(!cart.line_items) return \"loading...\"\n \n    return (\n        <Container>\n            <div className={classes.toolbar} />\n            <Typography className={classes.title} variant='h4' gutterBottom>Your Shopping Cart</Typography>\n            {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\n        </Container>\n    )\n}\n\nexport default Cart\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  toolbar: theme.mixins.toolbar,\n  layout: {\n    marginTop: '5%',\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      marginTop: 60,\n    },\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  divider: {\n    margin: '20px 0',\n  },\n  spinner: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));","import React from 'react';\nimport { TextField, Grid } from '@material-ui/core';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\n\nconst FormInput = ({ name, label, error, rules }) => {\n    const { control, formState: { errors } } = useFormContext();\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Controller\n                defaultValue=''\n                name={name} \n                control={control}\n                fullWidth\n                rules={rules}\n                render={( { field: { ...field } }) => <TextField {...field} label={label} error={error} />}\n            />\n            <ErrorMessage as='p' errors={errors} name={name} message={`${label} is too long`} style={{color: 'red'}} />\n        </Grid>\n    )\n}\n\nexport default FormInput\n","import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\n\nimport FormInput from './FormInput';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}))\n    \n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchShippingSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id)\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, [])\n\n    useEffect(() => {\n        if(shippingCountry) fetchShippingSubdivisions(shippingCountry);\n    }, [shippingCountry])\n\n    useEffect(() => {\n        if(shippingSubdivisions) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision])\n\n    return (\n        <>\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n                    <Grid container spacing={3}>\n                        <FormInput name='firstName' label='First name' rules={{required: 'This field is required', maxLength: 20}} error={methods.formState.errors.firstName} />\n                        <FormInput name='lastName' label='Last name' rules={{required: 'This field is required', maxLength: 20}} error={methods.formState.errors.lastName} />\n                        <FormInput name='address1' label='Address' rules={{required: 'This field is required', maxLength: 30}} error={methods.formState.errors.address1} />\n                        <FormInput name='email' label='Email' rules={{required: 'This field is required', pattern: {value: /\\S+@\\S+\\.\\S+/, message: \"Entered value does not match email format\"}}} error={methods.formState.errors.email}/>\n                        <FormInput name='city' label='City'rules={{required: 'This field is required', maxLength: 15}} error={methods.formState.errors.city} />\n                        <FormInput name='zip' label='ZIP / Postal code' rules={{required: 'This field is required', maxLength: 10}} error={methods.formState.errors.zip}/>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                        {subdivision.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Option</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                            {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent:  'space-between'}}>\n                        <Button component={Link} to='/cart' variant='outlined'>Back to Cart</Button>\n                        <Button type='submit' variant='contained'>Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","import React from 'react';\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\n\nconst Review = ({ checkoutToken }) => {\n    return (\n        <>\n             <Typography variant='h6' gutterBottom>Order summery</Typography>\n             <List disablePadding>\n                 {checkoutToken.live.line_items.map((product) => (\n                     <ListItem style={{padding: '10px 0'}} key={product.name}>\n                         <ListItemText primary={product.name} secondary={`Quantity: ${product.quantity}`} />\n                         <Typography variant='body2'>{product.line_total.formatted_with_symbol}</Typography>\n                     </ListItem>\n                 ))}\n                 <ListItem style={{padding: '10px 0'}}>\n                     <ListItemText primary=\"Total\" />\n                     <Typography variant='subtitle1' style={{fontWeight: 700}}>\n                         {checkoutToken.live.subtotal.formatted_with_symbol}\n                     </Typography>\n                 </ListItem>\n             </List>\n        </>\n    )\n}\n\nexport default Review\n","import React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nimport Review from './Review';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({ checkoutToken, shippingData, backStep, onCaptureCheckout, nextStep, timeout, onHandleEmptyCart }) => {\n    const handleSubmit = async (event, elements, stripe) => {\n        event.preventDefault();\n\n        if(!stripe || !elements) return;\n\n        const cardElement = elements.getElement(CardElement);\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\n\n        if(error) {\n            console.log(error);\n        } else {\n            const orderData = {\n                line_items: checkoutToken.live.line_item,\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\n                shipping: {\n                    name: 'Primary',\n                    street: shippingData.address1,\n                    town_city: shippingData.city,\n                    county_state: shippingData.shippingSubdivision,\n                    potal_zip_code: shippingData.zip,\n                    country: shippingData.shippingCountry,\n                },\n                fulfillment: { shipping_method: shippingData.shippingOption },\n                payment: {\n                    gateway: 'stripe',\n                    stripe: {\n                        payment_method_id: paymentMethod.id\n                    }\n                }\n            }\n            \n            onCaptureCheckout(checkoutToken.id, orderData);\n\n            onHandleEmptyCart();\n\n            timeout();\n\n            nextStep();\n        }\n    }\n\n    return (\n        <>\n            <Review checkoutToken={checkoutToken} />\n            <Divider />\n            <Typography variant='h6' gutterBottom style={ { margin: '20px 0' }}>Payment method</Typography>\n            <Elements stripe={stripePromise}>\n                <ElementsConsumer>\n                    {({ elements, stripe }) => (\n                        <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n                            <CardElement />\n                            <br /><br />\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <Button variant='outlined' onClick={backStep}>Back</Button>\n                                <Button type='submit' variant='contained' disabled={!stripe} color='primary'>\n                                    Pay { checkoutToken.live.subtotal.formatted_with_symbol }\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </ElementsConsumer>\n            </Elements>\n        </>\n    );\n}\n\nexport default PaymentForm\n","import React, { useState, useEffect } from 'react'\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { commerce } from '../../../lib/commerce';\nimport useStyles from './styles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error, onHandleEmptyCart }) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const [isFinished, setIsFinished] = useState(false);\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const generateToken = async() => {\n            try {\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n                setCheckoutToken(token);\n            } catch(error) {\n                if (activeStep !== steps.length) navigate('/');\n            }\n        }\n\n        generateToken();\n    }, [cart])\n\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n    const next = (data) => {\n        setShippingData(data);\n\n        nextStep();\n    }\n\n    const timeout = () => {\n        setTimeout(() => {\n            setIsFinished(true);\n        }, 3000);\n    }\n\n    const Comfirmation = () => order.customer ? (\n        <>\n            <div>\n                <Typography variant='h5'>Thank you for your purchase {order.cutomer.firstname} {order.cutomer.lastname}</Typography>\n                <Divider className={classes.divider}/>\n                <Typography variant='subtitle2'>Order ref: {order.customer_reference}</Typography>\n            </div>\n            <br />\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to home</Button>\n        </>\n    ) : isFinished ? (\n        <>\n            <div>\n                <Typography variant='h5'>Thank you for your purchase.</Typography>\n            </div>\n            <br />\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to home</Button>\n        </>\n    ) : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n        </div>\n    )\n\n    if (error) {\n        <>\n            <Typography variant='h5'>Error: {error}</Typography>\n            <br />\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to home</Button>\n        </>\n    }\n\n    const Form = () => activeStep === 0\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\n        : <PaymentForm shippingData={shippingData} \n                       checkoutToken={checkoutToken} \n                       backStep={backStep} \n                       nextStep={nextStep}\n                       onCaptureCheckout={onCaptureCheckout}\n                       timeout={timeout}\n                       onHandleEmptyCart={onHandleEmptyCart}\n                       />\n\n    return (\n        <>\n        <CssBaseline />\n            <div className={classes.toolbar}/>\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                    <Typography variant='h4' align='center'>Checkout</Typography>\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map((step) => (\n                            <Step key={step}>\n                                <StepLabel>{step}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    {activeStep === steps.length ? <Comfirmation /> : checkoutToken && <Form />}\n                </Paper>\n            </main>\n        </>\n    )\n}\n\nexport default Checkout\n","import React, { useState, useEffect } from 'react';\nimport { commerce } from './lib/commerce';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { Products, Navbar, Cart, Checkout } from './components';\n\nconst App = () => {\n    const [ products, setProcuts ] = useState([]);\n    const [ cart, setCart ] = useState({});\n    const [order, setOrder] =useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const fetchProducts = async () => {\n        const { data } = await commerce.products.list();\n\n        setProcuts(data);\n    }\n\n    const fetchCart = async () => {\n        setCart(await commerce.cart.retrieve());\n    }\n\n    const handleAddToCart = async (productId, quantity) => {\n        const { cart } = await commerce.cart.add(productId, quantity);\n\n        setCart(cart);\n    }\n\n    const handleUpdateCartQty = async (productId, quantity) => {\n        const { cart } = await commerce.cart.update(productId, { quantity });\n\n        setCart(cart)\n    }\n\n    const handleRemoveFromCart = async (productId) => {\n        const { cart } = await commerce.cart.remove(productId);\n\n        setCart(cart)\n    }\n\n    const handleEmptyCart = async () => {\n        const { cart } = await commerce.cart.empty();\n\n        setCart(cart)\n    }\n\n    const refreshCart = async () => {\n        const newCart = await commerce.cart.refresh();\n\n        setCart(newCart);\n    }\n\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        try {\n            const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n\n            setOrder(incomingOrder);\n            refreshCart();\n        } catch (error) {\n            setErrorMessage(error.data.error.message);\n        }\n    }\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCart();\n    }, []);\n\n    return (\n        <Router>\n            <div>\n                <Navbar totalItems={cart.total_items}/>\n                <Routes>\n                    <Route path='/' element={<Products products={products} onAddToCart={handleAddToCart}/>} />\n                    <Route path='/cart' element={<Cart \n                                                  cart={cart}\n                                                  handleUpdateCartQty={handleUpdateCartQty}\n                                                  handleRemoveFromCart={handleRemoveFromCart}\n                                                  handleEmptyCart={handleEmptyCart}\n                                                  />} />\n                    <Route path='/checkout' element={<Checkout \n                                                        cart={cart} \n                                                        order={order}\n                                                        onCaptureCheckout={handleCaptureCheckout}\n                                                        error={errorMessage} \n                                                        onHandleEmptyCart={handleEmptyCart}\n                                                        />} />\n                </Routes>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}